version: 2.1
orbs:
  node: circleci/node@4.1.0
  sonarcloud: sonarsource/sonarcloud@1.0.2
  aws-cli: circleci/aws-cli@1.3.1
  aws-s3: circleci/aws-s3@2.0.0
executors:
  node_15:
    docker:
      - image: cimg/node:15.4
    working_directory: .

jobs:
  test:
    executor: node_15
    steps:
      - checkout # check out the code in the project directory
      - node/install:
          install-yarn: true
      - node/install-packages
      - run:
          name: Prettier
          command: yarn format
      - run:
          name: Run all tests
          command: yarn test
      - persist_to_workspace:
          root: .
          paths:
            - coverage
      - store_test_results:
          path: ./coverage/
          #when: always

  sonarcloud:
    executor: node_15
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: /tmp/project
      - run:
          name: "Append token in sonar-project.properties"
          command: echo "sonar.login=$SONAR_LOGIN" >> sonar-project.properties
      - sonarcloud/scan:
          sonar_token_variable_name: SONAR_LOGIN

  build:
    executor: node_15
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: /tmp/project
      - run:
          name: Build public dir
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - public

  deploy:
    parameters:
      bucket:
        description: "Target bucket name where the build should be copied"
        default: ''
        type: string
      cloudfront_distribution:
        description: "The CloudFront Distribution caching the site"
        default: ''
        type: string
    executor: aws-cli/default
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: /tmp/project
      - aws-cli/setup
      - aws-s3/sync:
          aws-region: AWS_DEFAULT_REGION
          from: public
          to: "s3://<< parameters.bucket >>/"
      - run:
          name: Invalidate CloudFront Distribution Cache
          command: |
            aws cloudfront create-invalidation \
            --distribution-id << parameters.cloudfront_distribution >> --paths "/*"

workflows:
  test_build_deploy:
    jobs:
      - test
      - sonarcloud:
          context: zds
          requires:
            - test
          filters:
            branches:
              only:
                - development
                - main
      - build:
          requires:
            - test
      - deploy: # deployment step only for development environment
          bucket: com.zeppelin.zds.website.dev
          cloudfront_distribution: ET351YZOMAVPH
          context: zds
          requires:
            - build
          filters:
            branches:
              only:
                - development
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - deploy: # deployment step for live environment
          bucket: com.zeppelin.zds.website.live
          cloudfront_distribution: E3N62GDZMDUN0M
          context: zds
          requires:
            - hold
          filters:
            branches:
              only:
                - main
