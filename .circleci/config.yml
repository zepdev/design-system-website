version: 2.1
orbs:
  node: circleci/node@0.0.7
  aws-cli: circleci/aws-cli@0.1.2
  aws-s3: circleci/aws-s3@1.0.0
executors:
  node_10:
    docker:
      - image: circleci/node:10.15

jobs:
  test:
    executor: node_10
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/with-cache:
          steps:
            - run:
                name: Yarn install
                command: yarn install
            - run:
                name: Prettier
                command: yarn format
            - run:
                name: Run all tests
                command: yarn test
      - persist_to_workspace:
          root: .
          paths: coverage
  sonarqube:
    executor: node_10
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/with-cache:
          steps:
            - run:
                name: Generate eslint report
                command: yarn eslint-sonarqube
            - run:
                name: Run sonar scanner
                command: yarn sonar-scanner -Dsonar.login=$SONAR_LOGIN
  build:
    executor: node_10
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/with-cache:
          steps:
            - run:
                name: Build public dir
                command: yarn build
      - persist_to_workspace:
          root: .
          paths: public

  deploy:
    parameters:
      bucket:
        description: 'Target bucket name where the build should be copied'
        default: ''
        type: string
      aws_region:
        description: 'The AWS region where the infrastructure is'
        default: 'eu-central-1'
        type: string
      cloudfront_distribution:
        description: 'The CloudFront Distribution caching the site'
        default: ''
        type: string
    executor: aws-cli/default
    environment:
      AWS_REGION: << parameters.aws_region >>
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - run:
          name: create folder to put badges in
          command: mkdir badges
      - run:
          name: cd into new directory
          command: cd badges
      - run:
          name: create badges
          command: curl -u $SONAR_LOGIN "http://sq.zepdev.net/api/project_badges/measure?project=design-system-website&metric={bugs,code_smells,coverage,duplicated_lines_density,ncloc,sqale_rating,alert_status,reliability_rating,security_rating,sqale_index,vulnerabilities}" -o "#1.svg"
      - run:
          name: cd back to root
          command: cd ..
      - aws-s3/sync:
          from: public
          to: 's3://<< parameters.bucket >>/'
          overwrite: true
      - aws-s3/sync:
          from: badges
          to: 's3://zds-badges/ZDS/'
          overwrite: true
      - run:
          name: Invalidate CloudFront Distribution Cache
          command: aws cloudfront create-invalidation --distribution-id << parameters.cloudfront_distribution >> --paths "/*"

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      - sonarqube:
          context: zds
          requires:
            - test
          filters:
            branches:
              only:
                - development
                - master
      - build:
          requires:
            - test
      - deploy: # deployment step only for development environment
          bucket: zds-dev
          aws_region: eu-central-1
          cloudfront_distribution: ET351YZOMAVPH
          context: zds
          requires:
            - build
          filters:
            branches:
              only:
                - development
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy: # deployment step for live environment
          bucket: zds-live
          aws_region: eu-central-1
          cloudfront_distribution: E3N62GDZMDUN0M
          context: zds
          requires:
            - hold
          filters:
            branches:
              only:
                - master
