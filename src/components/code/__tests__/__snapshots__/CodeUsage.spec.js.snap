// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeUsage renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="CodeUsage-root-0-1-1"
      >
        <h3
          class="CodeUsage-heading-0-1-2 zep-typo--normal-4"
        >
          Code Usage Examples
        </h3>
        <div
          class="Tabs-root-0-1-3"
          data-testid="tabs"
        >
          <button
            class="ButtonBase-button-0-1-11 Tab-root-0-1-4 Tab-selected-0-1-10 Tab-fullWidth-0-1-6"
          >
            <p
              class="Tab-label-0-1-7 Tab-selected-0-1-10 Tab-labelPrimary-0-1-8 zep-typo--normal-4"
            >
              React
            </p>
          </button>
          <button
            class="ButtonBase-button-0-1-11 Tab-root-0-1-4 Tab-fullWidth-0-1-6"
          >
            <p
              class="Tab-label-0-1-7 Tab-labelPrimary-0-1-8 zep-typo--normal-4"
            >
              Vue
            </p>
          </button>
        </div>
        <pre
          class="prism-code language-js"
          style="background-color: rgb(55, 61, 63); margin-bottom: 3rem; color: rgb(236, 238, 239); padding: 8px 8px 1.5rem 1.5rem; font-size: 0.875rem; margin-top: 0px; display: flex; justify-content: space-between; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;"
        >
          <div
            data-testid="codeDiv"
            style="padding-top: 16px;"
          >
            <div
              class="token-line"
              data-testid="code"
            >
              <span
                class="token plain"
              >
                no example yet
              </span>
              <span
                class="token punctuation"
                style="color: rgb(236, 238, 239);"
              >
                ,
              </span>
              <span
                class="token plain"
              >
                 please check back later
              </span>
              <span
                class="token operator"
                style="color: rgb(91, 192, 222);"
              >
                !
              </span>
            </div>
          </div>
          <button
            class="ButtonBase-button-0-1-11 CopyButton-button-0-1-12"
            data-testid="copyButton"
          >
            <svg
              aria-labelledby="title"
              class="CopyButton-icon-0-1-13"
              height="32"
              viewBox="0 0 24 24"
              width="32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <title
                id="title_copy"
              >
                Copy Icon
              </title>
              <path
                d="M20,21 L9,21 L9,7 L20,7 L20,21 Z M20,5 L9,5 C7.8954305,5 7,5.8954305 7,7 L7,21 C7,22.1045695 7.8954305,23 9,23 L20,23 C21.1045695,23 22,22.1045695 22,21 L22,7 C22,5.8954305 21.1045695,5 20,5 L20,5 Z M17,1 L5,1 C3.8954305,1 3,1.8954305 3,3 L3,17 L5,17 L5,3 L17,3 L17,1 Z"
                fill="currentColor"
              />
            </svg>
          </button>
        </pre>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="CodeUsage-root-0-1-1"
    >
      <h3
        class="CodeUsage-heading-0-1-2 zep-typo--normal-4"
      >
        Code Usage Examples
      </h3>
      <div
        class="Tabs-root-0-1-3"
        data-testid="tabs"
      >
        <button
          class="ButtonBase-button-0-1-11 Tab-root-0-1-4 Tab-selected-0-1-10 Tab-fullWidth-0-1-6"
        >
          <p
            class="Tab-label-0-1-7 Tab-selected-0-1-10 Tab-labelPrimary-0-1-8 zep-typo--normal-4"
          >
            React
          </p>
        </button>
        <button
          class="ButtonBase-button-0-1-11 Tab-root-0-1-4 Tab-fullWidth-0-1-6"
        >
          <p
            class="Tab-label-0-1-7 Tab-labelPrimary-0-1-8 zep-typo--normal-4"
          >
            Vue
          </p>
        </button>
      </div>
      <pre
        class="prism-code language-js"
        style="background-color: rgb(55, 61, 63); margin-bottom: 3rem; color: rgb(236, 238, 239); padding: 8px 8px 1.5rem 1.5rem; font-size: 0.875rem; margin-top: 0px; display: flex; justify-content: space-between; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;"
      >
        <div
          data-testid="codeDiv"
          style="padding-top: 16px;"
        >
          <div
            class="token-line"
            data-testid="code"
          >
            <span
              class="token plain"
            >
              no example yet
            </span>
            <span
              class="token punctuation"
              style="color: rgb(236, 238, 239);"
            >
              ,
            </span>
            <span
              class="token plain"
            >
               please check back later
            </span>
            <span
              class="token operator"
              style="color: rgb(91, 192, 222);"
            >
              !
            </span>
          </div>
        </div>
        <button
          class="ButtonBase-button-0-1-11 CopyButton-button-0-1-12"
          data-testid="copyButton"
        >
          <svg
            aria-labelledby="title"
            class="CopyButton-icon-0-1-13"
            height="32"
            viewBox="0 0 24 24"
            width="32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title
              id="title_copy"
            >
              Copy Icon
            </title>
            <path
              d="M20,21 L9,21 L9,7 L20,7 L20,21 Z M20,5 L9,5 C7.8954305,5 7,5.8954305 7,7 L7,21 C7,22.1045695 7.8954305,23 9,23 L20,23 C21.1045695,23 22,22.1045695 22,21 L22,7 C22,5.8954305 21.1045695,5 20,5 L20,5 Z M17,1 L5,1 C3.8954305,1 3,1.8954305 3,3 L3,17 L5,17 L5,3 L17,3 L17,1 Z"
              fill="currentColor"
            />
          </svg>
        </button>
      </pre>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllBySelectText": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getAllByValue": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getBySelectText": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "getByValue": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllBySelectText": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryAllByValue": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryBySelectText": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "queryByValue": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
