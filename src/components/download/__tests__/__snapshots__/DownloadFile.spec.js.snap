// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DownloadFile renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="makeStyles-root-1"
      >
        <p
          class="zep-typo--body-default makeStyles-text-4"
        >
          mockTitle
        </p>
        <div
          class="makeStyles-container-2"
        >
          <button
            class="makeStyles-button-7 makeStyles-button-9"
            data-testid="downloadButton"
          >
            <svg
              aria-hidden="true"
              class="makeStyles-icon-8"
              data-testid="ZepIconEssentialDownloadIcon"
              focusable="false"
              height="24"
              viewBox="0 0 24 24"
              width="24"
            >
              <path
                d="M21.25 14.38c.31 0 .57.23.62.53v1.34c0 1.67-1.3 3.03-2.94 3.12H5a3.13 3.13 0 01-3.12-2.94V15a.62.62 0 011.24-.1v1.35c0 .99.77 1.8 1.73 1.87h13.9c.99 0 1.8-.76 1.87-1.72V15c0-.35.28-.63.63-.63zm-9.38-10c.32 0 .58.23.62.53l.01.09v8.5l2.68-2.7a.63.63 0 01.8-.06l.09.07c.21.22.24.55.07.8l-.07.08-3.8 3.8-.06.04-.07.03-.08.04a.62.62 0 01-.32.01l-.09-.03-.08-.04-.05-.03-.05-.04-3.79-3.78a.62.62 0 01.8-.95l.09.07 2.68 2.68V5c0-.35.28-.63.63-.63z"
                fill="currentColor"
                fill-rule="evenodd"
                transform="scale(Infinity, Infinity)"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="makeStyles-root-1"
    >
      <p
        class="zep-typo--body-default makeStyles-text-4"
      >
        mockTitle
      </p>
      <div
        class="makeStyles-container-2"
      >
        <button
          class="makeStyles-button-7 makeStyles-button-9"
          data-testid="downloadButton"
        >
          <svg
            aria-hidden="true"
            class="makeStyles-icon-8"
            data-testid="ZepIconEssentialDownloadIcon"
            focusable="false"
            height="24"
            viewBox="0 0 24 24"
            width="24"
          >
            <path
              d="M21.25 14.38c.31 0 .57.23.62.53v1.34c0 1.67-1.3 3.03-2.94 3.12H5a3.13 3.13 0 01-3.12-2.94V15a.62.62 0 011.24-.1v1.35c0 .99.77 1.8 1.73 1.87h13.9c.99 0 1.8-.76 1.87-1.72V15c0-.35.28-.63.63-.63zm-9.38-10c.32 0 .58.23.62.53l.01.09v8.5l2.68-2.7a.63.63 0 01.8-.06l.09.07c.21.22.24.55.07.8l-.07.08-3.8 3.8-.06.04-.07.03-.08.04a.62.62 0 01-.32.01l-.09-.03-.08-.04-.05-.03-.05-.04-3.79-3.78a.62.62 0 01.8-.95l.09.07 2.68 2.68V5c0-.35.28-.63.63-.63z"
              fill="currentColor"
              fill-rule="evenodd"
              transform="scale(Infinity, Infinity)"
            />
          </svg>
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
